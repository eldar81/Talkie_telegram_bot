"""Handlers for messages in /profile menu"""

import re

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery

from keyboards import profile_menu, change_profile, profile_submenu, bio_gender, gender_of_companion
from loader import dp, db


@dp.message_handler(Command("profile"))
async def check_profile(message: Message):
    try:
        user = db.select_user(id=message.from_user.id)
        gender = "–ú—É–∂—Å–∫–æ–π"
        req = "–ù–µ—Ç"
        if user[4] == 0:
            gender = "–ñ–µ–Ω—Å–∫–∏–π"
        if user[7] == 1:
            req = "–¢–æ–ª—å–∫–æ –º—É–∂—Å–∫–æ–≥–æ –ø–æ–ª–∞"
        elif user[7] == 0:
            req = "–¢–æ–ª—å–∫–æ –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ–ª–∞"
        await message.answer(text=f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ Talkie:\n\n"
                                  f"<b>–ò–º—è:</b> {user[3]}\n"
                                  f"<b>–ü–æ–ª:</b> {gender}\n"
                                  f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {user[5]}\n"
                                  f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {user[6]}\n"
                                  f"<b>–ü–æ–∂–µ–ª–∞–Ω–∏–µ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É:</b> {req}\n",
                             reply_markup=profile_menu,
                             disable_notification=True
                             )
    except:
        await message.answer("–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è\n\n"
                             "–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üòâ")


@dp.callback_query_handler(text="back_to_profile")
async def check_profile(call: CallbackQuery):
    user = db.select_user(id=call.from_user.id)
    gender = "–ú—É–∂—Å–∫–æ–π"
    req = "–ù–µ—Ç"
    if user[4] == 0:
        gender = "–ñ–µ–Ω—Å–∫–∏–π"
    if user[7] == 1:
        req = "–¢–æ–ª—å–∫–æ –º—É–∂—Å–∫–æ–≥–æ –ø–æ–ª–∞"
    elif user[7] == 0:
        req = "–¢–æ–ª—å–∫–æ –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ–ª–∞"
    await call.message.answer(text=f"–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –≤ Talkie:\n\n"
                              f"<b>–ò–º—è:</b> {user[3]}\n"
                              f"<b>–ü–æ–ª:</b> {gender}\n"
                              f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {user[5]}\n"
                              f"<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã:</b> {user[6]}\n"
                              f"<b>–ü–æ–∂–µ–ª–∞–Ω–∏–µ –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É:</b> {req}\n",
                         reply_markup=profile_menu,
                         disable_notification=True
                         )
    await call.message.edit_reply_markup()


@dp.callback_query_handler(text='change_my_profile')
async def what_to_change(call: CallbackQuery):
    await call.answer(cache_time=5)
    await call.message.answer(text="–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?",
                              reply_markup=change_profile,
                              disable_notification=True)
    await call.message.edit_reply_markup()


@dp.callback_query_handler(text='change_profile_name')
async def change_name(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.answer(text="–í–≤–µ–¥–∏ –∏–º—è",
                              disable_notification=True)
    await call.message.edit_reply_markup()
    await state.set_state("change_profile_name")


@dp.message_handler(state="change_profile_name")
async def changed_name(message: Message, state: FSMContext):
    answer = message.text
    db.update_user_name(id=message.from_user.id,
                        Bio_name=answer)
    await message.answer(text=f"–ò–º—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: <b>{answer}</b>",
                         reply_markup=profile_submenu)
    await state.finish()


@dp.callback_query_handler(text='change_profile_age')
async def change_age(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.answer(text="–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç",
                              disable_notification=True)
    await call.message.edit_reply_markup()
    await state.set_state("change_profile_age")


@dp.message_handler(state="change_profile_age")
async def changed_age(message: Message, state: FSMContext):
    answer = message.text
    if re.match(r'[1-9]{1}[0-9]{1}', answer) and len(answer) == 2:
        db.update_user_age(id=message.from_user.id,
                       Bio_age=int(answer))
        await message.answer(text=f"–í–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: <b>{answer}</b>",
                         reply_markup=profile_submenu)
        await state.finish()
    else:
        await message.answer(text="‚ùî–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n"
                                  "<i>22</i>",
                             disable_notification=True)
        await state.set_state("change_profile_age")


@dp.callback_query_handler(text='change_profile_hobby')
async def change_hobby(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.answer(text="–ö–∞–∫–∏–µ —É —Ç–µ–±—è —Ö–æ–±–±–∏? –ü–µ—Ä–µ—á–∏—Å–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä:\n\n"
                                   "<i>–§–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ, —à–∞—Ö–º–∞—Ç—ã, –∫–∞—Ä—Ç–∏–Ω—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º</i>",
                              disable_notification=True)
    await call.message.edit_reply_markup()
    await state.set_state("change_profile_hobby")


@dp.message_handler(state="change_profile_hobby")
async def changed_hobby(message: Message, state: FSMContext):
    answer = message.text
    db.update_user_hobby(id=message.from_user.id,
                         Bio_hobby=answer)
    await message.answer(text=f"–ò–Ω—Ç–µ—Ä–µ—Å—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞: <b>{answer}</b>",
                         reply_markup=profile_submenu)
    await state.finish()


@dp.callback_query_handler(text='change_profile_gender')
async def change_gender(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.answer(text="–¢–≤–æ–π –ø–æ–ª?",
                              reply_markup=bio_gender,
                              disable_notification=True
                              )
    await call.message.edit_reply_markup()
    await state.set_state("change_profile_gender")


@dp.callback_query_handler(state="change_profile_gender")
async def changed_gender(call: CallbackQuery, state: FSMContext):
    callback_data = call.data
    if callback_data == "male":
        answer = "–ú—É–∂—Å–∫–æ–π"
        answer_to_db = 1
    elif callback_data == "female":
        answer = "–ñ–µ–Ω—Å–∫–∏–π"
        answer_to_db = 0
    db.update_user_gender(id=call.from_user.id,
                          Bio_gender=answer_to_db)
    await call.message.answer(text=f"–ü–æ–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: <b>{answer}</b>",
                              reply_markup=profile_submenu)
    await call.message.edit_reply_markup()
    await state.finish()


@dp.callback_query_handler(text='change_profile_compreq')
async def change_compreq(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    await call.message.answer("–°–∫–∞–∂–∏, –∫–∞–∫–æ–≥–æ –ø–æ–ª–∞ –Ω–∞–º –Ω–∞–π—Ç–∏ –¥–ª—è —Ç–µ–±—è —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞?",
                              reply_markup=gender_of_companion,
                              disable_notification=True)
    await call.message.edit_reply_markup()
    await state.set_state("change_profile_compreq")


@dp.callback_query_handler(state="change_profile_compreq")
async def changed_compreq(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=5)
    callback_data = call.data
    answer = "–ù–µ—Ç"
    answer_to_db = 2
    if callback_data == "gender_of_companion_male":
        answer = "–¢–æ–ª—å–∫–æ –º—É–∂—Å–∫–æ–≥–æ –ø–æ–ª–∞"
        answer_to_db = 1
    elif callback_data == "gender_of_companion_female":
        answer = "–¢–æ–ª—å–∫–æ –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ–ª–∞"
        answer_to_db = 0
    db.update_user_compreq(id=call.from_user.id,
                           Bio_companion_requirements=answer_to_db)
    await call.message.answer(text=f"–í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É: <b>{answer}</b>",
                              reply_markup=profile_submenu)
    await call.message.edit_reply_markup()
    await state.finish()
